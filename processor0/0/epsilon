/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1812                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      binary;
    class       volScalarField;
    arch        "LSB;label=64;scalar=64";
    location    "0";
    object      epsilon;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 2 -3 0 0 0 0];


internalField   uniform 30000;

boundaryField
{
    inletCH4
    {
        type            turbulentMixingLengthDissipationRateInlet;
        mixingLength    0.000504;
        phi             phi;
        k               k;
        value           uniform 1;
    }
    wallOutside
    {
        type            epsilonWallFunction;
        Cmu             0.09;
        kappa           0.41;
        E               9.8;
        value           nonuniform 0;
    }
    wallTube
    {
        type            epsilonWallFunction;
        Cmu             0.09;
        kappa           0.41;
        E               9.8;
        value           uniform 30000;
    }
    inletPilot
    {
        type            turbulentMixingLengthDissipationRateInlet;
        mixingLength    0.000735;
        phi             phi;
        k               k;
        value           uniform 1;
    }
    inletAir
    {
        type            turbulentMixingLengthDissipationRateInlet;
        mixingLength    0.019677;
        value           uniform 1;
    }
    outlet
    {
        type            zeroGradient;
    }
    axis
    {
        type            empty;
    }
    frontAndBack_pos
    {
        type            wedge;
    }
    frontAndBack_neg
    {
        type            wedge;
    }
    procBoundary0to1
    {
        type            processor;
        value           uniform 30000;
    }
}


// ************************************************************************* //
